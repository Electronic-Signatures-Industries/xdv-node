import r from"ethjs-provider-http";import e from"ethjs-query";import t from"ethjs-contract";import i from"ethr-did-resolver/contracts/ethr-did-registry.json";import{SimpleSigner as n,createJWT as o,verifyJWT as s,toEthereumAddress as u}from"did-jwt";import{Buffer as a}from"buffer";import{stringToBytes32 as c,delegateTypes as d,REGISTRY as h}from"ethr-did-resolver";var f=new(0,require("elliptic").ec)("secp256k1"),v=d.Secp256k1VerificationKey2018;function m(r,e){if(a.isBuffer(e))return"0x"+e.toString("hex");var t=r.match(/^did\/(pub|auth|svc)\/(\w+)(\/(\w+))?(\/(\w+))?$/);return t&&"base64"===t[6]?"0x"+a.from(e,"base64").toString("hex"):e.match(/^0x[0-9a-fA-F]*$/)?e:"0x"+a.from(e).toString("hex")}var g=function(){function a(r){var o=this.configureProvider(r),s=new e(o),u=r.registry||h,a=new t(s)(i);if(this.registry=a.at(u),this.address=r.address,!this.address)throw new Error("No address is set for EthrDid");this.did="did:ethr:"+this.address,r.signer?this.signer=r.signer:r.privateKey&&(this.signer=n(r.privateKey))}var d=a.prototype;return d.configureProvider=function(e){return e.provider?e.provider:e.web3?e.web3.currentProvider:new r(e.rpcUrl||"https://mainnet.infura.io/ethr-did")},a.createKeyPair=function(){var r=f.genKeyPair(),e=r.getPublic("hex"),t=r.getPrivate("hex");return{address:u(e),privateKey:t}},d.lookupOwner=function(r){void 0===r&&(r=!0);try{return r&&this.owner?Promise.resolve(this.owner):Promise.resolve(this.registry.identityOwner(this.address)).then(function(r){return r[0]})}catch(r){return Promise.reject(r)}},d.changeOwner=function(r){try{var e=this;return Promise.resolve(e.lookupOwner()).then(function(t){return Promise.resolve(e.registry.changeOwner(e.address,r,{from:t})).then(function(t){return e.owner=r,t})})}catch(r){return Promise.reject(r)}},d.addDelegate=function(r,e){var t=e.delegateType,i=void 0===t?v:t,n=e.expiresIn,o=void 0===n?86400:n;try{var s=this;return Promise.resolve(s.lookupOwner()).then(function(e){return s.registry.addDelegate(s.address,i,r,o,{from:e})})}catch(r){return Promise.reject(r)}},d.revokeDelegate=function(r,e){void 0===e&&(e=v);try{var t=this;return Promise.resolve(t.lookupOwner()).then(function(i){return t.registry.revokeDelegate(t.address,e,r,{from:i})})}catch(r){return Promise.reject(r)}},d.setAttribute=function(r,e,t,i){void 0===t&&(t=86400);try{var n=this;return Promise.resolve(n.lookupOwner()).then(function(o){return n.registry.setAttribute(n.address,c(r),m(r,e),t,{from:o,gas:i})})}catch(r){return Promise.reject(r)}},d.revokeAttribute=function(r,e,t){try{var i=this;return Promise.resolve(i.lookupOwner()).then(function(n){return i.registry.revokeAttribute(i.address,c(r),m(r,e),{from:n,gas:t})})}catch(r){return Promise.reject(r)}},d.createSigningDelegate=function(r,e){void 0===r&&(r=v),void 0===e&&(e=86400);try{var t=a.createKeyPair();return this.signer=n(t.privateKey),Promise.resolve(this.addDelegate(t.address,{delegateType:r,expiresIn:e})).then(function(r){return{kp:t,txHash:r}})}catch(r){return Promise.reject(r)}},d.signJWT=function(r,e){try{if("function"!=typeof this.signer)throw new Error("No signer configured");var t={signer:this.signer,alg:"ES256K-R",issuer:this.did};return e&&(t.expiresIn=e),Promise.resolve(o(r,t))}catch(r){return Promise.reject(r)}},d.verifyJWT=function(r,e,t){try{return void 0===t&&(t=this.did),Promise.resolve(s(r,{resolver:e,audience:t}))}catch(r){return Promise.reject(r)}},a}();export default g;
//# sourceMappingURL=index.esm.js.map
