"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.verifyRS256 = void 0;
const rs = require('jsrsasign');
const rsu = require('jsrsasign-util');
const path = require('path');
const JWS = rs.jws.JWS;
function verifyRS256(data, signature, authenticators) {
    const signer = authenticators.find((pk) => {
        const pubKeyObj = rs.KEYUTIL.getKey(pk.publicKeyPem);
        const acceptField = { alg: [] };
        acceptField.alg = ['RS256', 'RS384', 'RS512',
            'PS256', 'PS384', 'PS512',
            'ES256', 'ES384', 'ES512'];
        const isValid = rs.jws.JWS.verifyJWT(`${data}.${signature}`, pubKeyObj, acceptField);
        return isValid;
    });
    if (!signer)
        throw new Error('Signature invalid for JWT');
    return signer;
}
exports.verifyRS256 = verifyRS256;
const algorithms = {
    RS256: verifyRS256
};
function VerifierAlgorithm(alg) {
    const impl = algorithms[alg];
    if (!impl)
        throw new Error(`Unsupported algorithm ${alg}`);
    return impl;
}
exports.default = VerifierAlgorithm;
//# sourceMappingURL=VerifierAlgorithm.js.map