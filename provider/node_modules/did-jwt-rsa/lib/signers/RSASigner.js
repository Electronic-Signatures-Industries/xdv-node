"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RSASigner = void 0;
const tslib_1 = require("tslib");
const rsa = tslib_1.__importStar(require("node-rsa"));
const util_1 = require("../util");
/**
 *  Creates a configured signer function for signing data using the RSA algorithm.
 *
 *  The signing function itself takes the data as a `Uint8Array` or `string` and returns a `base64Url`-encoded signature
 *
 *  @example
 *  ```typescript
 *  const sign: Signer = RSASigner(process.env.PEM)
 *  const signature: string = await sign(data)
 *  ```
 *
 *  @param    {String}    pem         a PEM
 *  @return   {Function}              a configured signer function `(data: string | Uint8Array): Promise<string>`
 */
function RSASigner(pem) {
    const privateKey = rsa.importKey(pem);
    return (data) => tslib_1.__awaiter(this, void 0, void 0, function* () {
        const dataBytes = typeof data === 'string' ? util_1.stringToBytes(data) : data;
        const sig = privateKey.sign(dataBytes);
        return util_1.bytesToBase64url(sig);
    });
}
exports.RSASigner = RSASigner;
//# sourceMappingURL=RSASigner.js.map